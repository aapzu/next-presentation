import { FormEvent, useEffect, useState } from "react";
import styled from "styled-components";
import type { NextPage, NextPageContext } from "next";
import Head from "next/head";
import axios from "axios";
import { Note } from "../../types";
import Notes from "../../components/Notes";
import NewNote from "../../components/NewNote";

const Container = styled.div`
  max-width: 600px;
  height: 100%;
  padding: 0 16px;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
`;

const NotesPage: NextPage<{ apiNotes: Note[] }> = ({ apiNotes = [] }) => {
  const [notes, setNotes] = useState<Note[]>(apiNotes);

  const getNotes = async () => {
    const { data } = await axios.get("/api/notes");
    setNotes(data);
  };

  useEffect(() => {
    getNotes();
  }, []);

  const addNote = async (note: Note) => {
    const { data } = await axios.post("/api/notes", note);
    setNotes((n) => [...(n || []), data]);
  };

  const deleteNote = async (id: string) => {
    await axios.delete(`/api/notes/${id}`);
    await getNotes();
  };

  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
    const form = e.currentTarget;
    e.preventDefault();
    const formData = new FormData(form);
    const text = formData.get("text");
    if (!text) return;
    await addNote({ text: text.toString(), date: new Date().getTime() });
    form.reset();
  };

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Notes notes={notes} deleteNote={deleteNote} />
      <NewNote onSubmit={onSubmit} />
    </Container>
  );
};

export async function getServerSideProps(context: NextPageContext) {
  const { getNotes } = await import("../api/notes");
  return {
    props: {
      apiNotes: await getNotes()
    }
  };
}

export default NotesPage;
